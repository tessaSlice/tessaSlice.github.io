---
import "../styles/global.css";
---

<!-- TODO: add light/dark mode toggle with icon! -->
<div class="nav-links">
    <a href="/">Home</a>
    <a href="/posts/projects.html">Projects</a>
    <!-- TODO: modify the resume link so that it directs to a new page with a link to my resume as a PDF -->
    <!-- add to the left of the resume/cv an icon to indicate it'll take you to a new page -->
    <a href="/resume/">Resume/CV</a>
    <a href="CourseCharter">Course Charter</a>
    <button id="theme-toggle">
        <span id="theme-icon-light">&#9728;</span>
        <!-- Sun icon for light mode -->
        <span id="theme-icon-dark">&#9790;</span>
        <!-- Moon icon for dark mode -->
    </button>
</div>

<!-- to handle the theme toggle button -->
<script>
    function toggleTheme() {
        const currentTheme =
            document.documentElement.getAttribute("data-theme") || "light";
        const newTheme = currentTheme === "light" ? "dark" : "light";
        document.documentElement.setAttribute("data-theme", newTheme);
        localStorage.setItem("theme", newTheme);
        updateStyles(newTheme);
        updateIcon(newTheme);
    }

    function updateIcon(theme) {
        const iconLight = document.getElementById("theme-icon-light");
        const iconDark = document.getElementById("theme-icon-dark");
        if (theme === "light") {
            iconLight.style.display = "inline";
            iconDark.style.display = "none";
        } else {
            iconLight.style.display = "none";
            iconDark.style.display = "inline";
        }
    }

    document.addEventListener("DOMContentLoaded", () => {
        const savedTheme = localStorage.getItem("theme") || "light";
        document.documentElement.setAttribute("data-theme", savedTheme);
        updateStyles(savedTheme);
        updateIcon(savedTheme);
    });

    document
        .getElementById("theme-toggle")
        .addEventListener("click", toggleTheme);

    // Function to update the CSS custom properties based on the theme
    function updateStyles(theme) {
        const root = document.documentElement;

        if (theme === "dark") {
            root.style.setProperty(
                "--background-color",
                "var(--dark-background-color)",
            );
            root.style.setProperty("--text-color", "var(--dark-text-color)");
            root.style.setProperty(
                "--button-background-color",
                "var(--dark-button-background-color)",
            );
            root.style.setProperty(
                "--button-text-color",
                "var(--dark-button-text-color)",
            );
        } else {
            root.style.setProperty(
                "--background-color",
                "var(--default-background-color)",
            );
            root.style.setProperty("--text-color", "var(--default-text-color)");
            root.style.setProperty(
                "--button-background-color",
                "var(--default-button-background-color)",
            );
            root.style.setProperty(
                "--button-text-color",
                "var(--default-button-text-color)",
            );
        }
    }
</script>

<style>
    /* Styles for the toggle button */
    #theme-toggle {
        padding: 0.5rem 1rem;
        background-color: #fff; /* Light mode background color */
        color: #333; /* Light mode text color */
        border: 2px solid #333; /* Border color */
        border-radius: 5px; /* Rounded corners */
        cursor: pointer;
        font-size: 14px;
    }

    /* Hover effect */
    #theme-toggle:hover {
        background-color: #f0f0f0; /* Lighter background color on hover */
    }

    /* Active (pressed) state */
    #theme-toggle:active {
        background-color: #ccc; /* Darker background color when pressed */
    }

    /* Dark mode styles */
    [data-theme="dark"] #theme-toggle {
        background-color: #333; /* Dark mode background color */
        color: #fff; /* Dark mode text color */
        border-color: #fff; /* Border color */
    }

    /* Hide the dark mode icon by default */
    #theme-icon-dark {
        display: none;
    }
</style>
